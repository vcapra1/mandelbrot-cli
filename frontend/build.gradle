plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

	// Apply the javafx plugin to add support for JavaFX
	id 'org.openjfx.javafxplugin' version '0.0.5'
}

def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:26.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // JavaFX
    compile "org.openjfx:javafx-controls:11:${platform}"
}

javafx {
	// Ensure we are using at least version 11
	version = "11.0.+"

	// Specify that we need all javafx modules
	modules = [ 'javafx.controls' ]
}

jar {
    manifest {
        attributes "Main-Class": "mandelbrot.App"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'mandelbrot.App'
    }
    baseName = 'mandelbrot_full'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// Define the main class for the application
mainClassName = 'mandelbrot.App'
